package com.cummins.project734.luceneentity;

import java.io.File;
import java.io.IOException;

import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.core.SimpleAnalyzer;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.queryparser.classic.MultiFieldQueryParser;
import org.apache.lucene.queryparser.classic.ParseException;
import org.apache.lucene.queryparser.classic.QueryParser;
import org.apache.lucene.search.IndexSearcher;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.ScoreDoc;
import org.apache.lucene.search.TopDocs;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;
import org.apache.lucene.util.Version;

import com.cummins.project734.entity.AnalysisData;
//import org.apache.lucene.search.Hits;

public class SearchIndex {
	
	public static final String FIELD_PATH = "path";
	public static final String FIELD_CONTENTS = "contents";
	

	
	public AnalysisData searchIndex(File indexDir, String queryStr, int maxHits) 
	throws Exception {

		Directory directory = FSDirectory.open(indexDir);
		IndexReader reader = IndexReader.open(directory);
		AnalysisData ad = new AnalysisData();
		
		IndexSearcher searcher = new IndexSearcher(reader);

		QueryParser parser = MultiFieldQueryParser.parse(Version.LUCENE_40, queryStr, "contents", new StandardAnalyzer(Version.LUCENE_40)); 
		
		Query query = parser.parse(queryStr);

		TopDocs topDocs = searcher.search(query, maxHits);

		ScoreDoc[] hits = topDocs.scoreDocs;
		for (int i = 0; i < hits.length; i++) {
			int docId = hits[i].doc;
			Document d = searcher.doc(docId);
			System.out.println(d.get("path"));
		}

		System.out.println("Found " + hits.length);
		ad.setFrequency(hits.length);
		return ad;

	}

}
